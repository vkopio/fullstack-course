{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/people.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","value","changeHandler","react_default","a","createElement","onChange","Persons","persons","removalHandler","map","person","key","name","number","onClick","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","people","axios","get","then","response","data","newObject","post","id","delete","concat","put","notificationColor","success","error","Notification","notification","Object","keys","length","style","color","className","message","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","nameFilter","setNameFilter","_useState9","_useState10","setNotification","useEffect","peopleService","initialPeople","newNotification","setTimeout","peopleToShow","filter","toLowerCase","includes","resetPerson","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","personObject","existingPerson","find","confirmMessage","window","confirm","returnedPerson","catch","newPerson","components_Persons","personToRemove","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9fbcf099.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ value, changeHandler }) => (\n    <div>\n        Rajaa näytettäviä: <input value={value} onChange={changeHandler} />\n    </div>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst Persons = ({ persons, removalHandler }) => {\n    return persons.map(person =>\n        <div key={person.name}>{person.name} {person.number}\n            <button onClick={() => removalHandler(person)}>Poista</button>\n        </div>\n    )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = (props) => (\n    <form onSubmit={props.addPerson}>\n        <div>\n            nimi: <input value={props.newName} onChange={props.handleNameChange} />\n        </div>\n\n        <div>\n            numero: <input value={props.newNumber} onChange={props.handleNumberChange} />\n        </div>\n\n        <div>\n            <button type=\"submit\">lisää</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }\n","import React from 'react'\n\nconst notificationColor = {\n    success: 'green',\n    error: 'red'\n}\n\nconst Notification = ({ notification }) => {\n    if (Object.keys(notification).length === 0) {\n        return null\n    }\n\n    const style = {\n        color: notificationColor[notification.type]\n    }\n\n    return (\n        <div className=\"error\" style={style}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport peopleService from './services/people'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [nameFilter, setNameFilter] = useState('')\n    const [notification, setNotification] = useState({})\n\n    useEffect(() => {\n        peopleService\n            .getAll()\n            .then(initialPeople => {\n                setPersons(initialPeople)\n            })\n    }, [])\n\n    const newNotification = (notification) => {\n        setNotification(notification)\n\n        setTimeout(() => {\n            setNotification({})\n        }, 5000)\n    }\n\n    const peopleToShow = persons.filter(person =>\n        person.name.toLowerCase().includes(nameFilter.toLowerCase())\n    )\n\n    const resetPerson = () => {\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        const existingPerson = persons.find(person => person.name === newName)\n\n        if (existingPerson) {\n            const confirmMessage = `${newName} on jo luettelossa. Korvataanko vanha numero uudella?`\n\n            if (window.confirm(confirmMessage)) {\n                peopleService\n                    .update(existingPerson.id, personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person =>\n                            person.id !== existingPerson.id ? person : returnedPerson\n                        ))\n\n                        newNotification({\n                            message: `Päivitettiin ${returnedPerson.name}`,\n                            type: 'success'\n                        })\n                    })\n                    .catch(error => {\n                        newNotification({\n                            message: error.response.data.error,\n                            type: 'error'\n                        })\n                    })\n            }\n\n            resetPerson()\n            return\n        }\n\n        peopleService\n            .create(personObject)\n            .then(newPerson => {\n                setPersons(persons.concat(newPerson))\n                newNotification({\n                    message: `Lisättiin ${newPerson.name}`,\n                    type: 'success'\n                })\n                resetPerson()\n            })\n            .catch(error => {\n                newNotification({\n                    message: error.response.data.error,\n                    type: 'error'\n                })\n            })\n    }\n\n    const removePerson = (personToRemove) => {\n        peopleService\n            .remove(personToRemove.id)\n            .then(() => {\n                setPersons(persons.filter(person => person.id !== personToRemove.id))\n                newNotification({\n                    message: `Poistettiin ${personToRemove.name}`,\n                    type: 'success'\n                })\n            })\n            .catch(error => {\n                setPersons(persons.filter(person => person.id !== personToRemove.id))\n                newNotification({\n                    message: `Henkilö ${personToRemove.name} oli jo poistettu.`,\n                    type: 'error'\n                })\n            })\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleNameFilterChange = (event) => {\n        setNameFilter(event.target.value)\n    }\n\n    const handlePersonRemoval = (person) => {\n        if (window.confirm(`Poistetaanko ${person.name}?`)) {\n            removePerson(person)\n        }\n    }\n\n    return (\n        <div>\n            <h1>Puhelinluettelo</h1>\n\n            <Notification notification={notification} />\n\n            <Filter value={nameFilter} changeHandler={handleNameFilterChange} />\n\n            <h2>Lisää uusi</h2>\n\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName}\n                newNumber={newNumber}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n            />\n\n            <h2>Numerot</h2>\n            <Persons persons={peopleToShow} removalHandler={handlePersonRemoval} />\n        </div>\n    )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}